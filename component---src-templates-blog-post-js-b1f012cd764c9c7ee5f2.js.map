{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","console","log","frontmatter","description","excerpt","style","marginBottom","scale","display","rhythm","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","color","textDecortation","to","fields","slug","rel","pageQuery"],"mappings":"+NAyEeA,UAnEU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OADFC,QAAQC,IAAI,OAAQZ,GAEhB,kBAAC,IAAD,CAAQE,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,iCACE,oCACE,wBACEC,MAAO,CACLC,aAAc,IAGfd,EAAKU,YAAYL,OAEpB,uBACEQ,MAAK,iBACAE,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcG,YAAO,MAGtBjB,EAAKU,YAAYQ,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQpB,EAAKqB,QACjD,wBACER,MAAO,CACLC,aAAcG,YAAO,OAI3B,6BACE,wBACEJ,MAAO,CACLG,QAAQ,OACRM,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGnB,GACC,kBAAC,OAAD,CAAMO,MAAO,CAACa,MAAO,mBAAoBC,gBAAiB,aAAcC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAtG,KACKzB,EAASI,YAAYL,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMM,MAAO,CAACa,MAAO,mBAAoBC,gBAAiB,aAAcC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC/FxB,EAAKG,YAAYL,MADpB,WAaP,IAAM2B,EAAS","file":"component---src-templates-blog-post-js-b1f012cd764c9c7ee5f2.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\nconsole.log('post', data)\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <headerBlog>\n          <h1\n            style={{\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </headerBlog>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n      </article>\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link style={{color: \"rgb(207, 83, 44)\", textDecortation: \"underline\"}} to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link style={{color: \"rgb(207, 83, 44)\", textDecortation: \"underline\"}} to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}