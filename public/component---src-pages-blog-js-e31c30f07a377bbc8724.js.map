{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js"],"names":["PostLink","post","class","to","frontmatter","path","thumbnail","src","alt","title","className","date","IndexPage","data","site","Posts","allMarkdownRemark","edges","filter","edge","node","map","key","id","siteMetadata","name","content","description","w3l_dom_key","pageQuery"],"mappings":"mJAoBeA,EAjBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASC,MAAM,SACb,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,YAAYC,QACtBJ,EAAKG,YAAYE,WAClB,yBAAKC,IAAKN,EAAKG,YAAYE,UAAWE,IAAKP,EAAKG,YAAYK,MAAQ,qBAGxE,oCACE,wBAAIC,UAAU,cACZ,kBAAC,IAAD,CAAMP,GAAIF,EAAKG,YAAYC,KAAMK,UAAU,aACxCT,EAAKG,YAAYK,QAGtB,yBAAKP,MAAM,aAAaD,EAAKG,YAAYO,SChB/C,0CAiCeC,UA3BG,SAAC,GAKZ,IAAD,IAJJC,KACEC,EAGE,EAHFA,KAKIC,EAFF,EAFFC,kBAAqBC,MAKpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKhB,YAAYO,QACvCU,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAItB,KAAMkB,EAAKC,UAEvD,OACE,kBAAC,IAAD,KAEI,+BAAQN,EAAKU,aAAaf,OAC1B,0BAAMgB,KAAK,cAAcC,QAASZ,EAAKU,aAAaG,cAClDb,EAAKU,aAAaI,YAAqB,0BAAMH,KAAK,0BAA0BC,QAASZ,EAAKU,aAAaI,cAAvE,KAIpC,yBAAKlB,UAAU,SACZK,KArBT,IA4Bac,EAAS","file":"component---src-pages-blog-js-e31c30f07a377bbc8724.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <article class=\"card \">\n    <Link to={post.frontmatter.path}>\n      {!!post.frontmatter.thumbnail && (\n        <img src={post.frontmatter.thumbnail} alt={post.frontmatter.title + \"- Featured Shot\"} />\n      )}\n    </Link>\n    <>\n      <h2 className=\"post-title\">\n        <Link to={post.frontmatter.path} className=\"post-link\">\n          {post.frontmatter.title}\n        </Link>\n      </h2>\n      <div class=\"post-meta\">{post.frontmatter.date}</div>\n    </>\n  </article>\n)\nexport default PostLink","import React from \"react\"\nimport { graphql } from 'gatsby'\nimport Layout from \"../components/layout\"\nimport PostLink from \"../components/post-link\"\n// import HeroHeader from \"../components/heroHeader\"\n\nconst IndexPage = ({\n  data: {\n    site,\n    allMarkdownRemark: { edges },\n  }\n}) => {\n\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n      {/* <Helmet> */}\n        <title>{site.siteMetadata.title}</title>\n        <meta name=\"description\" content={site.siteMetadata.description} />\n        {!site.siteMetadata.w3l_dom_key ? null : <meta name=\"w3l-domain-verification\" content={site.siteMetadata.w3l_dom_key} />}\n      {/* </Helmet> */}\n      {/* <HeroHeader/> */}\n      {/* <h2>Blog Posts &darr;</h2> */}\n      <div className=\"grids\">\n        {Posts}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\nexport const pageQuery = graphql`\n  query indexPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        w3l_dom_key\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}