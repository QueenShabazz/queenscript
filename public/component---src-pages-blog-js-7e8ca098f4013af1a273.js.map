{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js"],"names":["PostLink","post","style","display","flexDirection","to","frontmatter","path","thumbnail","width","padding","margin","src","alt","title","className","fontSize","textTransform","date","fontWeight","timeToRead","lineHeight","excerpt","IndexPage","data","site","Posts","allMarkdownRemark","edges","filter","edge","node","map","key","id","siteMetadata","name","content","description","w3l_dom_key","pageQuery"],"mappings":"mJAyBeA,EAtBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,iCACE,oCACA,0BAAMC,MAAO,CAACC,QAAS,OAAQC,cAAe,QAC1C,kBAAC,IAAD,CAAMC,GAAIJ,EAAKK,YAAYC,QACxBN,EAAKK,YAAYE,WACpB,yBAAKN,MAAO,CAACO,MAAO,OAAQC,QAAS,EAAGC,OAAQ,YAAaC,IAAKX,EAAKK,YAAYE,UAAWK,IAAKZ,EAAKK,YAAYQ,MAAQ,qBAG5H,yBAAKZ,MAAO,CAACQ,QAAS,IACpB,wBAAIK,UAAU,aAAab,MAAO,CAACc,SAAU,QAC7C,kBAAC,IAAD,CAAMX,GAAIJ,EAAKK,YAAYC,KAAMQ,UAAU,aACxCd,EAAKK,YAAYQ,QAGpB,yBAAKC,UAAU,YAAYb,MAAO,CAACc,SAAU,QAASC,cAAe,eAAgBhB,EAAKK,YAAYY,KAAtG,MAA8G,0BAAMhB,MAAO,CAACiB,WAAY,MAAOlB,EAAKmB,WAAtC,aAA9G,KACA,uBAAGlB,MAAO,CAACmB,WAAY,MAAOL,SAAU,QAASG,WAAY,MAAOlB,EAAKqB,cCnBnF,0CA4BeC,UAvBG,SAAC,GAKZ,IAAD,IAJJC,KACEC,EAGE,EAHFA,KAKIC,EAFF,EAFFC,kBAAqBC,MAKpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKzB,YAAYY,QACvCc,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIjC,KAAM6B,EAAKC,UAEvD,OACE,kBAAC,IAAD,KACI,+BAAQN,EAAKU,aAAarB,OAC1B,0BAAMsB,KAAK,cAAcC,QAASZ,EAAKU,aAAaG,cAClDb,EAAKU,aAAaI,YAAqB,0BAAMH,KAAK,0BAA0BC,QAASZ,EAAKU,aAAaI,cAAvE,KACpC,6BACGb,KAjBT,IAwBac,EAAS","file":"component---src-pages-blog-js-7e8ca098f4013af1a273.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) =>   (\n  <article>\n    <>\n    <span style={{display: \"flex\", flexDirection: \"row\"}}>\n        <Link to={post.frontmatter.path}>\n        {!!post.frontmatter.thumbnail && (\n        <img style={{width: \"42vw\", padding: 5, margin: \"10px 2px\"}} src={post.frontmatter.thumbnail} alt={post.frontmatter.title + \"- Featured Shot\"} />\n      )}\n        </Link>\n        <div style={{padding: 0}}>\n          <h2 className=\"post-title\" style={{fontSize: \"3vw\"}}>          \n          <Link to={post.frontmatter.path} className=\"post-link\">\n            {post.frontmatter.title}\n          </Link>\n          </h2>\n          <div className=\"post-meta\" style={{fontSize: \"1.5vw\", textTransform: \"capitalize\"}}>{post.frontmatter.date} â€¢ <span style={{fontWeight: 700}}>{post.timeToRead} min read</span> </div>\n          <p style={{lineHeight: \"1.2\", fontSize: \"2.5vw\", fontWeight: 100}}>{post.excerpt}</p>\n        </div>\n    </span>\n    </>\n  </article>\n)\nexport default PostLink","import React from \"react\"\nimport { graphql } from 'gatsby'\nimport Layout from \"../components/layout\"\nimport PostLink from \"../components/post-link\"\n\nconst IndexPage = ({\n  data: {\n    site,\n    allMarkdownRemark: { edges },\n  }\n}) => {\n\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n        <title>{site.siteMetadata.title}</title>\n        <meta name=\"description\" content={site.siteMetadata.description} />\n        {!site.siteMetadata.w3l_dom_key ? null : <meta name=\"w3l-domain-verification\" content={site.siteMetadata.w3l_dom_key} />}\n      <div>\n        {Posts}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\nexport const pageQuery = graphql`\n  query indexPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        w3l_dom_key\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            thumbnail\n          }\n          \n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}